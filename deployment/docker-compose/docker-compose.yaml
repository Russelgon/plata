services:
  postgres:
    image: postgres:14.5-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: postgres -c fsync=off
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ../../
      dockerfile: build/plata/Dockerfile
    container_name: go_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST_PRIMARY: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_SSLMODE: disable
      POSTGRES_MAX_OPEN_CONNS: 10
      POSTGRES_MAX_IDLE_CONNS: 5
      POSTGRES_CONN_MAX_IDLE_TIME: 30s
    restart: on-failure
    ports:
      - "8080:8080"
    
  migrate:
    image: migrate/migrate
    volumes:
      - ../../migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint:
      - migrate
      - -path=/migrations
      - -database=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      - up

volumes:
  postgres_data:
