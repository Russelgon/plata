// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/quotes/latest": {
            "get": {
                "description": "Returns the most recent quote for a currency pair (e.g. EUR/USD)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "Get latest quote",
                "parameters": [
                    {
                        "enum": [
                            "EUR/USD",
                            "EUR/MXN",
                            "EUR/RUB"
                        ],
                        "type": "string",
                        "description": "Currency pair",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_transport_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/plata_internal_domain_quote.Quote"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quotes/update": {
            "post": {
                "description": "Asynchronously request a quote update for a currency pair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "Update a quote",
                "parameters": [
                    {
                        "description": "Currency pair",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.UpdateQuoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_transport_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_transport_api.UpdateQuoteResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quotes/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "Retrieve quote by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quote update ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_transport_api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/plata_internal_domain_quote.Quote"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/internal_transport_api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_transport_api.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {},
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_transport_api.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "internal_transport_api.UpdateQuoteRequest": {
            "type": "object",
            "required": [
                "currency"
            ],
            "properties": {
                "currency": {
                    "description": "например: EUR/MXN",
                    "type": "string"
                }
            }
        },
        "internal_transport_api.UpdateQuoteResponse": {
            "type": "object",
            "properties": {
                "update_id": {
                    "type": "string"
                }
            }
        },
        "plata_internal_domain_quote.Quote": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idempotency_key": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/plata_internal_domain_quote.Status"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "plata_internal_domain_quote.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "StatusUnspecified",
                "StatusInProgress",
                "StatusDone"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Quotes API",
	Description:      "Currency quote service: async updates and retrieval",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
